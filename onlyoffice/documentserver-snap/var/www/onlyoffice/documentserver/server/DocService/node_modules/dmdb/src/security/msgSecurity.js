"use strict";

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var crypto_1 = require("crypto"), MsgSecurity = function() {
    function t() {}
    return t.newClientKeyPair = function() {
        var r = crypto_1.createDiffieHellman(t.DHParaP, "hex", t.DHParaG);
        return r.generateKeys(), r;
    }, t.getIV = function(r) {
        if (-1 === r) return Buffer.alloc(0);
        var e = Buffer.alloc(r);
        return this.DEFAULT_IV.copy(e, 0, 0, r), e;
    }, t.getPublicKey = function(r) {
        var e = r.getPublicKey();
        return e.length < t.DH_KEY_LENGTH && (e = Buffer.concat([ Buffer.alloc(t.DH_KEY_LENGTH - e.length), e ], t.DH_KEY_LENGTH)), 
        e;
    }, t.computeSessionKey = function(r, e) {
        var t = r.computeSecret(e);
        return 0 === t[0] ? t.slice(1) : t;
    }, t.DH_KEY_LENGTH = 64, t.WORK_MODE_MASK = 127, t.ECB_MODE = 1, t.CBC_MODE = 2, 
    t.CFB_MODE = 4, t.OFB_MODE = 8, t.ALGO_MASK = 65408, t.DES = 128, t.DES3 = 256, 
    t.AES128 = 512, t.AES192 = 1024, t.AES256 = 2048, t.RC4 = 4096, t.MD5 = 4352, t.DES_CFB = 132, 
    t.MD5_DIGEST_SIZE = 16, t.MIN_EXTERNAL_CIPHER_ID = 5e3, t.DEFAULT_IV = Buffer.from([ 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 32 ]), 
    t.DHParaP = "C009D877BAF5FAF416B7F778E6115DCB90D65217DCC2F08A9DFCB5A192C593EBAB02929266B8DBFC2021039FDBD4B7FDE2B996E00008F57AE6EFB4ED3F17B6D3", 
    t.DHParaG = 5, t;
}();

exports.MsgSecurity = MsgSecurity;
"use strict";

var __values = this && this.__values || function(r) {
    var t = "function" == typeof Symbol && Symbol.iterator, i = t && r[t], n = 0;
    if (i) return i.call(r);
    if (r && "number" == typeof r.length) return {
        next: function() {
            return r && n >= r.length && (r = void 0), {
                value: r && r[n++],
                done: !r
            };
        }
    };
    throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, __read = this && this.__read || function(r, t) {
    var i = "function" == typeof Symbol && r[Symbol.iterator];
    if (!i) return r;
    var n, e, o = i.call(r), f = [];
    try {
        for (;(void 0 === t || 0 < t--) && !(n = o.next()).done; ) f.push(n.value);
    } catch (r) {
        e = {
            error: r
        };
    } finally {
        try {
            n && !n.done && (i = o.return) && i.call(o);
        } finally {
            if (e) throw e.error;
        }
    }
    return f;
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var convertUtil_1 = require("../utils/convertUtil"), Properties = function() {
    function h(r) {
        this.innerProps = new Map(), void 0 !== r && this.setProps(r.innerProps);
    }
    return h.prototype.setProps = function(r) {
        var t, i;
        if (void 0 !== r) try {
            for (var n = __values(r), e = n.next(); !e.done; e = n.next()) {
                var o = __read(e.value, 2), f = o[0], a = o[1];
                this.innerProps.set(f, a);
            }
        } catch (r) {
            t = {
                error: r
            };
        } finally {
            try {
                e && !e.done && (i = n.return) && i.call(n);
            } finally {
                if (t) throw t.error;
            }
        }
    }, h.prototype.setDiffProps = function(r) {
        var t, i, n, e;
        if (void 0 !== r) if (r instanceof h) try {
            for (var o = __values(r.innerProps), f = o.next(); !f.done; f = o.next()) {
                var a = __read(f.value, 2), u = a[0], s = a[1];
                this.innerProps.has(u) || this.innerProps.set(u, s);
            }
        } catch (r) {
            t = {
                error: r
            };
        } finally {
            try {
                f && !f.done && (i = o.return) && i.call(o);
            } finally {
                if (t) throw t.error;
            }
        } else if (r instanceof Map) try {
            for (var v = __values(r), c = v.next(); !c.done; c = v.next()) {
                var l = __read(c.value, 2), u = l[0], s = l[1];
                this.innerProps.has(u) || this.innerProps.set(u, s);
            }
        } catch (r) {
            n = {
                error: r
            };
        } finally {
            try {
                c && !c.done && (e = v.return) && e.call(v);
            } finally {
                if (n) throw n.error;
            }
        }
    }, h.prototype.setAny = function(r, t) {
        this.innerProps.set(r.toLowerCase(), t);
    }, h.prototype.set = function(r, t) {
        this.innerProps.set(r.toLowerCase(), t);
    }, h.prototype.setIfNotExist = function(r, t) {
        this.innerProps.has(r.toLowerCase()) || this.set(r, t);
    }, h.prototype.getAny = function(r) {
        return this.innerProps.get(r.toLowerCase());
    }, h.prototype.getBoolean = function(r, t) {
        var i = this.innerProps.get(r.toLowerCase());
        return void 0 !== i ? convertUtil_1.ConvertUtil.toBoolean(i.toString()) : t;
    }, h.prototype.getNumber = function(r, t, i, n) {
        var e = this.innerProps.get(r.toLowerCase());
        if (!e) return t;
        var o = Number.parseInt(e);
        return isNaN(o) || void 0 !== i && o < i || void 0 !== n && n < o ? t : o;
    }, h.prototype.getTrimString = function(r, t) {
        var i = this.innerProps.get(r.toLowerCase());
        return i ? i.trim() : t;
    }, h.prototype.getStringArray = function(r, t) {
        var i = this.getTrimString(r, "");
        if (i) {
            var n = i.split(",");
            if (0 < n.length) return n;
        }
        return t;
    }, h.prototype.size = function() {
        return this.innerProps.size;
    }, h;
}();

exports.Properties = Properties;
"use strict";

var __read = this && this.__read || function(t, r) {
    var i = "function" == typeof Symbol && t[Symbol.iterator];
    if (!i) return t;
    var n, o, e = i.call(t), u = [];
    try {
        for (;(void 0 === r || 0 < r--) && !(n = e.next()).done; ) u.push(n.value);
    } catch (t) {
        o = {
            error: t
        };
    } finally {
        try {
            n && !n.done && (i = e.return) && i.call(e);
        } finally {
            if (o) throw o.error;
        }
    }
    return u;
}, __spread = this && this.__spread || function() {
    for (var t = [], r = 0; r < arguments.length; r++) t = t.concat(__read(arguments[r]));
    return t;
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var logger_1 = require("./logger"), NullData = function() {};

exports.NullData = NullData;

var LogRecord = function() {
    function r(t, r) {
        for (var i = [], n = 2; n < arguments.length; n++) i[n - 2] = arguments[n];
        this.source = logger_1.Logger.formatSource(t), this.method = r, this.params = i, 
        this.usedTime = 0;
    }
    return r.prototype.toString = function() {
        var t = logger_1.Logger.formatTrace.apply(logger_1.Logger, __spread([ this.source, this.method, this.returnValue ], this.params));
        return 0 < this.usedTime && (t += this.formatUsedTime(this.usedTime)), t;
    }, r.prototype.formatUsedTime = function(t) {
        return "[USED TIME]: " + t + "ms;";
    }, r.prototype.setError = function(t) {
        this.e = t;
    }, r.prototype.getError = function() {
        return this.e;
    }, r.prototype.setReturnValue = function(t) {
        this.returnValue = null === t ? r.NULL : t;
    }, r.prototype.getReturnValue = function() {
        return this.returnValue;
    }, r.prototype.setUsedTime = function(t) {
        this.usedTime = t;
    }, r.prototype.getUsedTime = function() {
        return this.usedTime;
    }, r.prototype.setSql = function(t) {
        this.sql = t;
    }, r.prototype.getSql = function() {
        return this.sql;
    }, r.NULL = new NullData(), r;
}();

exports.LogRecord = LogRecord;
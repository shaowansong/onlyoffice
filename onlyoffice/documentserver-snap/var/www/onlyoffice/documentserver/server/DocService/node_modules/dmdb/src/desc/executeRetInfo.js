"use strict";

var __read = this && this.__read || function(e, t) {
    var r = "function" == typeof Symbol && e[Symbol.iterator];
    if (!r) return e;
    var i, n, s = r.call(e), u = [];
    try {
        for (;(void 0 === t || 0 < t--) && !(i = s.next()).done; ) u.push(i.value);
    } catch (e) {
        n = {
            error: e
        };
    } finally {
        try {
            i && !i.done && (r = s.return) && r.call(s);
        } finally {
            if (n) throw n.error;
        }
    }
    return u;
}, __spread = this && this.__spread || function() {
    for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(__read(arguments[t]));
    return e;
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var middleware_1 = require("../middleware/middleware"), unenumerable_1 = require("../utils/unenumerable"), ExecuteRetInfo = function() {
    function e() {
        this.outParamDatas = new Array(0), this.hasResultSet = !1, this.rsSizeof = 0, this.rsCacheOffset = 0, 
        this.rsBdta = !1, this.rsUpdatable = !1, this.updateCount = BigInt(0), this.rowid = BigInt(-1), 
        this.retSqlType = -1;
    }
    return e.prototype.union = function(e, t, r) {
        var i, n;
        if (1 === r) this.updateCounts[t] = Number(e.updateCount); else if (e.updateCounts) for (var s = t; s < t + r; s++) this.updateCounts[s] = e.updateCounts[s - t];
        e.outParamDatas && (i = this.outParamDatas).push.apply(i, __spread(e.outParamDatas)), 
        e.batchErrors && (this.batchErrors || (this.batchErrors = []), (n = this.batchErrors).push.apply(n, __spread(e.batchErrors)));
    }, e;
}();

exports.ExecuteRetInfo = ExecuteRetInfo;

var Result = function() {
    function t(e) {
        this.middlewares = new middleware_1.Middlewares(e, null, t.nextID, e.middlewares), 
        t.nextID++, unenumerable_1.setUnenumerable(this, [ "middlewares", "nextID" ]);
    }
    return t.nextID = 0, t;
}();

exports.Result = Result;

var Results = function() {
    function t(e) {
        this.middlewares = new middleware_1.Middlewares(e, null, t.nextID, e.middlewares), 
        t.nextID++, unenumerable_1.setUnenumerable(this, [ "middlewares", "nextID" ]);
    }
    return t.nextID = 0, t;
}();

exports.Results = Results;
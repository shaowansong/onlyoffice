"use strict";

var __extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        } instanceof Array && function(t, e) {
            t.__proto__ = e;
        } || function(t, e) {
            for (var s in e) e.hasOwnProperty(s) && (t[s] = e[s]);
        })(t, e);
    };
    return function(t, e) {
        function s() {
            this.constructor = t;
        }
        n(t, e), t.prototype = null === e ? Object.create(e) : (s.prototype = e.prototype, 
        new s());
    };
}();

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var execute_1 = require("./execute"), msg_1 = require("./msg"), const_1 = require("../../desc/const"), executeRetInfo_1 = require("../../desc/executeRetInfo"), Fetch = function(r) {
    function s(t, e, s, n, i) {
        var c = r.call(this, t, msg_1.Msg.se, e.stmt, i) || this;
        return c.ie = e, c.ce = s, c.re = n, c;
    }
    return __extends(s, r), s.prototype.te = function() {
        this.mt.U(s.oe, this.ce), this.mt.U(s.ue, this.re), this.mt.y(s._e, this.ie.id);
        var t, e = this.ie.conn.conn_prop_bufPrefetch;
        0 != this.ie.sizeOfRow && 0 != this.ie.fetchSize && ((t = this.ie.sizeOfRow * this.ie.fetchSize) > const_1.Const.INT32_MAX && (t = const_1.Const.INT32_MAX), 
        e = t < const_1.Const.MIN_BUF_PREFETCH ? const_1.Const.MIN_BUF_PREFETCH : t > const_1.Const.MAX_BUF_PREFETCH ? const_1.Const.MAX_BUF_PREFETCH : t), 
        this.mt.v(s.he, e);
    }, s.prototype.ee = function() {
        var t = new executeRetInfo_1.ExecuteRetInfo();
        t.rsBdta = this.ie.bdta, t.updateCount = this.mt.n(s.fe);
        var e = this.mt.t(s.ae);
        return this._s(t, this.ie.columns.length, e, -1), t;
    }, s.oe = msg_1.Msg.os, s.ue = s.oe + const_1.Const.DDWORD_SIZE, s._e = s.ue + const_1.Const.LINT64_SIZE, 
    s.he = s._e + const_1.Const.USINT_SIZE, s.fe = msg_1.Msg.os, s.ae = s.fe + const_1.Const.DDWORD_SIZE, 
    s;
}(execute_1.Execute);

exports.Fetch = Fetch;
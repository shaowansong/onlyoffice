"use strict";

var __awaiter = this && this.__awaiter || function(t, s, h, u) {
    return new (h = h || Promise)(function(n, i) {
        function r(t) {
            try {
                o(u.next(t));
            } catch (t) {
                i(t);
            }
        }
        function e(t) {
            try {
                o(u.throw(t));
            } catch (t) {
                i(t);
            }
        }
        function o(t) {
            var i;
            t.done ? n(t.value) : ((i = t.value) instanceof h ? i : new h(function(t) {
                t(i);
            })).then(r, e);
        }
        o((u = u.apply(t, s || [])).next());
    });
}, __generator = this && this.__generator || function(n, r) {
    var e, o, s, h = {
        label: 0,
        sent: function() {
            if (1 & s[0]) throw s[1];
            return s[1];
        },
        trys: [],
        ops: []
    }, t = {
        next: i(0),
        throw: i(1),
        return: i(2)
    };
    return "function" == typeof Symbol && (t[Symbol.iterator] = function() {
        return this;
    }), t;
    function i(i) {
        return function(t) {
            return function(i) {
                if (e) throw new TypeError("Generator is already executing.");
                for (;h; ) try {
                    if (e = 1, o && (s = 2 & i[0] ? o.return : i[0] ? o.throw || ((s = o.return) && s.call(o), 
                    0) : o.next) && !(s = s.call(o, i[1])).done) return s;
                    switch (o = 0, s && (i = [ 2 & i[0], s.value ]), i[0]) {
                      case 0:
                      case 1:
                        s = i;
                        break;

                      case 4:
                        return h.label++, {
                            value: i[1],
                            done: !1
                        };

                      case 5:
                        h.label++, o = i[1], i = [ 0 ];
                        continue;

                      case 7:
                        i = h.ops.pop(), h.trys.pop();
                        continue;

                      default:
                        if (!(s = 0 < (s = h.trys).length && s[s.length - 1]) && (6 === i[0] || 2 === i[0])) {
                            h = 0;
                            continue;
                        }
                        if (3 === i[0] && (!s || i[1] > s[0] && i[1] < s[3])) {
                            h.label = i[1];
                            break;
                        }
                        if (6 === i[0] && h.label < s[1]) {
                            h.label = s[1], s = i;
                            break;
                        }
                        if (s && h.label < s[2]) {
                            h.label = s[2], h.ops.push(i);
                            break;
                        }
                        s[2] && h.ops.pop(), h.trys.pop();
                        continue;
                    }
                    i = r.call(n, h);
                } catch (t) {
                    i = [ 6, t ], o = 0;
                } finally {
                    e = s = 0;
                }
                if (5 & i[0]) throw i[1];
                return {
                    value: i[0] ? i[1] : void 0,
                    done: !0
                };
            }([ i, t ]);
        };
    }
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var const_1 = require("../desc/const"), logMiddleware_1 = require("./log/logMiddleware"), svcConf_1 = require("../desc/svcConf"), rwMiddleware_1 = require("./rw/rwMiddleware"), reconnectMiddleware_1 = require("./reconnect/reconnectMiddleware"), Middlewares = function() {
    function t(t, i, n, r) {
        r ? (this.middlewares = r.middlewares.slice(), this.rwInfo = r.rwInfo, this.logInfo = r.logInfo, 
        this.recoverInfo = r.recoverInfo) : this.middlewares = this.createMiddleWares(t, i), 
        this.pos = 0, this.valid = 0 < this.middlewares.length, this.id = n;
    }
    return t.prototype.createMiddleWares = function(t, i) {
        var n, r = new Array();
        return t ? (t.conn_prop_logLevel !== const_1.Const.LOG_OFF && (n = new logMiddleware_1.LogMiddleware(t.props), 
        r.push(n), this.logInfo = new LogInfo(), this.log = n.log), t.conn_prop_doSwitch !== const_1.Const.DO_SWITCH_OFF && (r.push(reconnectMiddleware_1.ReconnectMiddleware.getInstance()), 
        this.recoverInfo = new RecoverInfo()), t.conn_prop_rwSeparate && (r.push(rwMiddleware_1.RWMiddleware.getInstance()), 
        this.rwInfo = new RWInfo(t))) : i && (svcConf_1.SvcConf.parseLogLevel(i) !== const_1.Const.LOG_OFF && (n = new logMiddleware_1.LogMiddleware(i), 
        r.push(n), this.logInfo = new LogInfo(), this.log = n.log), i.getNumber("doSwitch", const_1.Const.DO_SWITCH_OFF, 0, 2) !== const_1.Const.DO_SWITCH_OFF && (r.push(reconnectMiddleware_1.ReconnectMiddleware.getInstance()), 
        this.recoverInfo = new RecoverInfo()), i.getBoolean("rwSeparate", !1) && (r.push(rwMiddleware_1.RWMiddleware.getInstance()), 
        this.rwInfo = new RWInfo())), r;
    }, t.prototype.reset = function() {
        return this.pos = 0, this;
    }, t.prototype.getID = function() {
        return this.id;
    }, t.prototype.connection_openConnection = function(i, n) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_openConnection(this, i, n) ] : [ 2, i.do_openConnection(n) ];
            });
        });
    }, t.prototype.connection_execute = function(i, n, r, e) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_execute(this, i, n, r, e) ] : [ 2, i.do_execute(n, r, e) ];
            });
        });
    }, t.prototype.connection_executeMany = function(i, n, r, e) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_executeMany(this, i, n, r, e) ] : [ 2, i.do_executeMany(n, r, e) ];
            });
        });
    }, t.prototype.connection_createLob = function(i, n) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_createLob(this, i, n) ] : [ 2, i.do_createLob(n) ];
            });
        });
    }, t.prototype.connection_close = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_close(this, i) ] : [ 2, i.do_close() ];
            });
        });
    }, t.prototype.connection_commit = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_commit(this, i) ] : [ 2, i.do_commit() ];
            });
        });
    }, t.prototype.connection_getStatementInfo = function(i, n) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_getStatementInfo(this, i, n) ] : [ 2, i.do_getStatementInfo(n) ];
            });
        });
    }, t.prototype.connection_rollback = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].connection_rollback(this, i) ] : [ 2, i.do_rollback() ];
            });
        });
    }, t.prototype.lob_close = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].lob_close(this, i) ] : [ 2, i.do_close() ];
            });
        });
    }, t.prototype.lob_getData = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].lob_getData(this, i) ] : [ 2, i.do_getData() ];
            });
        });
    }, t.prototype.lob_getLength = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].lob_getLength(this, i) ] : [ 2, i.do_getLength() ];
            });
        });
    }, t.prototype.pool_getConnection = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].pool_getConnection(this, i) ] : [ 2, i.do_getConnection() ];
            });
        });
    }, t.prototype.pool_close = function(i, n) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].pool_close(this, i, n) ] : [ 2, i.do_close(n) ];
            });
        });
    }, t.prototype.resultSet_close = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].resultSet_close(this, i) ] : [ 2, i.do_close() ];
            });
        });
    }, t.prototype.resultSet_getRow = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].resultSet_getRow(this, i) ] : [ 2, i.do_getRow() ];
            });
        });
    }, t.prototype.resultSet_getRows = function(i, n) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].resultSet_getRows(this, i, n) ] : [ 2, i.do_getRows(n) ];
            });
        });
    }, t.prototype.resultSet_getRowCount = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return this.pos < this.middlewares.length ? [ 2, this.middlewares[this.pos++].resultSet_getRowCount(this, i) ] : [ 2, i.do_getRowCount() ];
            });
        });
    }, t.prototype.logWarn = function(t) {
        this.log && this.log.warn(t);
    }, t;
}();

exports.Middlewares = Middlewares;

var RWSiteEnum, LogInfo = function() {
    this.lastExecuteStartMsec = 0;
};

exports.LogInfo = LogInfo, function(t) {
    t[t.PRIMARY = 0] = "PRIMARY", t[t.STANDBY = 1] = "STANDBY", t[t.ANY = 2] = "ANY";
}(RWSiteEnum = exports.RWSiteEnum || (exports.RWSiteEnum = {}));

var RWInfo = function() {
    function t(t) {
        this.distribute = RWSiteEnum.PRIMARY, this.tryRecoverTs = 0;
    }
    return t.prototype.cleanup = function() {
        this.distribute = RWSiteEnum.PRIMARY, this.rwCounter = void 0, this.connStandby = void 0;
    }, t.prototype.toPrimary = function() {
        return this.distribute !== RWSiteEnum.PRIMARY && this.rwCounter.countPrimary(), 
        this.distribute = RWSiteEnum.PRIMARY, this.distribute;
    }, t.prototype.toAny = function() {
        return this.distribute = this.rwCounter.count(RWSiteEnum.ANY, this.connStandby), 
        this.distribute;
    }, t;
}();

exports.RWInfo = RWInfo;

var RecoverInfo = function() {
    this.checkEpRecoverTs = 0;
};

exports.RecoverInfo = RecoverInfo;
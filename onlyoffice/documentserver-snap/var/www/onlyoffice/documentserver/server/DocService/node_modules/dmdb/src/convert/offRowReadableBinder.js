"use strict";

var __extends = this && this.__extends || function() {
    var e = function(n, t) {
        return (e = Object.setPrototypeOf || {
            __proto__: []
        } instanceof Array && function(n, t) {
            n.__proto__ = t;
        } || function(n, t) {
            for (var r in t) t.hasOwnProperty(r) && (n[r] = t[r]);
        })(n, t);
    };
    return function(n, t) {
        function r() {
            this.constructor = n;
        }
        e(n, t), n.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, 
        new r());
    };
}(), __awaiter = this && this.__awaiter || function(n, u, f, c) {
    return new (f = f || Promise)(function(r, t) {
        function e(n) {
            try {
                o(c.next(n));
            } catch (n) {
                t(n);
            }
        }
        function i(n) {
            try {
                o(c.throw(n));
            } catch (n) {
                t(n);
            }
        }
        function o(n) {
            var t;
            n.done ? r(n.value) : ((t = n.value) instanceof f ? t : new f(function(n) {
                n(t);
            })).then(e, i);
        }
        o((c = c.apply(n, u || [])).next());
    });
}, __generator = this && this.__generator || function(r, e) {
    var i, o, u, f = {
        label: 0,
        sent: function() {
            if (1 & u[0]) throw u[1];
            return u[1];
        },
        trys: [],
        ops: []
    }, n = {
        next: t(0),
        throw: t(1),
        return: t(2)
    };
    return "function" == typeof Symbol && (n[Symbol.iterator] = function() {
        return this;
    }), n;
    function t(t) {
        return function(n) {
            return function(t) {
                if (i) throw new TypeError("Generator is already executing.");
                for (;f; ) try {
                    if (i = 1, o && (u = 2 & t[0] ? o.return : t[0] ? o.throw || ((u = o.return) && u.call(o), 
                    0) : o.next) && !(u = u.call(o, t[1])).done) return u;
                    switch (o = 0, u && (t = [ 2 & t[0], u.value ]), t[0]) {
                      case 0:
                      case 1:
                        u = t;
                        break;

                      case 4:
                        return f.label++, {
                            value: t[1],
                            done: !1
                        };

                      case 5:
                        f.label++, o = t[1], t = [ 0 ];
                        continue;

                      case 7:
                        t = f.ops.pop(), f.trys.pop();
                        continue;

                      default:
                        if (!(u = 0 < (u = f.trys).length && u[u.length - 1]) && (6 === t[0] || 2 === t[0])) {
                            f = 0;
                            continue;
                        }
                        if (3 === t[0] && (!u || t[1] > u[0] && t[1] < u[3])) {
                            f.label = t[1];
                            break;
                        }
                        if (6 === t[0] && f.label < u[1]) {
                            f.label = u[1], u = t;
                            break;
                        }
                        if (u && f.label < u[2]) {
                            f.label = u[2], f.ops.push(t);
                            break;
                        }
                        u[2] && f.ops.pop(), f.trys.pop();
                        continue;
                    }
                    t = e.call(r, f);
                } catch (n) {
                    t = [ 6, n ], o = 0;
                } finally {
                    i = u = 0;
                }
                if (5 & t[0]) throw t[1];
                return {
                    value: t[0] ? t[1] : void 0,
                    done: !0
                };
            }([ t, n ]);
        };
    }
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var offRowBinder_1 = require("./offRowBinder"), OffRowReadableBinder = function(r) {
    function n(n, t) {
        return r.call(this, n, t) || this;
    }
    return __extends(n, r), n.prototype.read = function(e) {
        return __awaiter(this, void 0, void 0, function() {
            var r = this;
            return __generator(this, function(n) {
                if (0 < this.getBufferLeaveLen()) this.readFromBuffer(e); else if (!this.readOver) return [ 2, new Promise(function(n, t) {
                    r.obj.resume(), r.obj.on("data", function(n) {
                        if (!(n instanceof Buffer)) try {
                            n = Buffer.from(n);
                        } catch (n) {
                            t(n);
                        }
                        e.putBuffer(n, 0, n.length);
                    }), r.obj.on("end", function() {
                        r.readOver = !0, n();
                    }), r.obj.on("error", function(n) {
                        t(n);
                    });
                }) ];
                return [ 2 ];
            });
        });
    }, n.prototype.readAll = function() {
        return __awaiter(this, void 0, void 0, function() {
            var t;
            return __generator(this, function(n) {
                return t = Buffer.alloc(this.buffer.length), this.buffer.readBuffer(t, 0, this.buffer.length), 
                [ 2, t ];
            });
        });
    }, n;
}(offRowBinder_1.OffRowBinder);

exports.OffRowReadableBinder = OffRowReadableBinder;
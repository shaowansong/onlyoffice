"use strict";

var __awaiter = this && this.__awaiter || function(t, o, u, h) {
    return new (u = u || Promise)(function(n, i) {
        function e(t) {
            try {
                s(h.next(t));
            } catch (t) {
                i(t);
            }
        }
        function r(t) {
            try {
                s(h.throw(t));
            } catch (t) {
                i(t);
            }
        }
        function s(t) {
            var i;
            t.done ? n(t.value) : ((i = t.value) instanceof u ? i : new u(function(t) {
                t(i);
            })).then(e, r);
        }
        s((h = h.apply(t, o || [])).next());
    });
}, __generator = this && this.__generator || function(n, e) {
    var r, s, o, u = {
        label: 0,
        sent: function() {
            if (1 & o[0]) throw o[1];
            return o[1];
        },
        trys: [],
        ops: []
    }, t = {
        next: i(0),
        throw: i(1),
        return: i(2)
    };
    return "function" == typeof Symbol && (t[Symbol.iterator] = function() {
        return this;
    }), t;
    function i(i) {
        return function(t) {
            return function(i) {
                if (r) throw new TypeError("Generator is already executing.");
                for (;u; ) try {
                    if (r = 1, s && (o = 2 & i[0] ? s.return : i[0] ? s.throw || ((o = s.return) && o.call(s), 
                    0) : s.next) && !(o = o.call(s, i[1])).done) return o;
                    switch (s = 0, o && (i = [ 2 & i[0], o.value ]), i[0]) {
                      case 0:
                      case 1:
                        o = i;
                        break;

                      case 4:
                        return u.label++, {
                            value: i[1],
                            done: !1
                        };

                      case 5:
                        u.label++, s = i[1], i = [ 0 ];
                        continue;

                      case 7:
                        i = u.ops.pop(), u.trys.pop();
                        continue;

                      default:
                        if (!(o = 0 < (o = u.trys).length && o[o.length - 1]) && (6 === i[0] || 2 === i[0])) {
                            u = 0;
                            continue;
                        }
                        if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {
                            u.label = i[1];
                            break;
                        }
                        if (6 === i[0] && u.label < o[1]) {
                            u.label = o[1], o = i;
                            break;
                        }
                        if (o && u.label < o[2]) {
                            u.label = o[2], u.ops.push(i);
                            break;
                        }
                        o[2] && u.ops.pop(), u.trys.pop();
                        continue;
                    }
                    i = e.call(n, u);
                } catch (t) {
                    i = [ 6, t ], s = 0;
                } finally {
                    r = o = 0;
                }
                if (5 & i[0]) throw i[1];
                return {
                    value: i[0] ? i[1] : void 0,
                    done: !0
                };
            }([ i, t ]);
        };
    }
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var dm_1 = require("../dm"), SQLName = function() {
    function t(t) {
        this.m_name = "", this.m_pkgName = "", this.m_schName = "", this.m_fullName = "", 
        this.m_schId = -1, this.m_pkgId = -1, "string" == typeof t ? this.m_fullName = t : this.m_conn = t;
    }
    return t.prototype.getFullName = function() {
        return __awaiter(this, void 0, void 0, function() {
            var i;
            return __generator(this, function(t) {
                switch (t.label) {
                  case 0:
                    return 0 < this.m_fullName.length ? [ 2, this.m_fullName ] : this.m_name ? 0 == this.m_pkgId && 0 == this.m_schId ? [ 3, 2 ] : [ 4, this.m_conn.execute("SELECT NAME FROM SYS.SYSOBJECTS WHERE ID=?", [ this.m_pkgId || this.m_schId ], {
                        resultSet: !1,
                        outFormat: dm_1.dmdb.OUT_FORMAT_ARRAY
                    }) ] : [ 2, "" ];

                  case 1:
                    i = t.sent(), 0 != this.m_pkgId ? (this.m_pkgName = i.rows[0][0], this.m_fullName = this.m_pkgName + "." + this.m_name) : (this.m_schName = i.rows[0][0], 
                    this.m_fullName = this.m_schName + "." + this.m_name), t.label = 2;

                  case 2:
                    return [ 2, 0 < this.m_fullName.length ? this.m_fullName : this.m_name ];
                }
            });
        });
    }, t;
}();

exports.SQLName = SQLName;
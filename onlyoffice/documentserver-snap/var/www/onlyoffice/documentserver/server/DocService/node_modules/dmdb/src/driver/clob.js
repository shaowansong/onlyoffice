"use strict";

var __extends = this && this.__extends || function() {
    var n = function(t, r) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        } instanceof Array && function(t, r) {
            t.__proto__ = r;
        } || function(t, r) {
            for (var i in r) r.hasOwnProperty(i) && (t[i] = r[i]);
        })(t, r);
    };
    return function(t, r) {
        function i() {
            this.constructor = t;
        }
        n(t, r), t.prototype = null === r ? Object.create(r) : (i.prototype = r.prototype, 
        new i());
    };
}(), __awaiter = this && this.__awaiter || function(t, o, h, u) {
    return new (h = h || Promise)(function(i, r) {
        function n(t) {
            try {
                s(u.next(t));
            } catch (t) {
                r(t);
            }
        }
        function e(t) {
            try {
                s(u.throw(t));
            } catch (t) {
                r(t);
            }
        }
        function s(t) {
            var r;
            t.done ? i(t.value) : ((r = t.value) instanceof h ? r : new h(function(t) {
                t(r);
            })).then(n, e);
        }
        s((u = u.apply(t, o || [])).next());
    });
}, __generator = this && this.__generator || function(i, n) {
    var e, s, o, h = {
        label: 0,
        sent: function() {
            if (1 & o[0]) throw o[1];
            return o[1];
        },
        trys: [],
        ops: []
    }, t = {
        next: r(0),
        throw: r(1),
        return: r(2)
    };
    return "function" == typeof Symbol && (t[Symbol.iterator] = function() {
        return this;
    }), t;
    function r(r) {
        return function(t) {
            return function(r) {
                if (e) throw new TypeError("Generator is already executing.");
                for (;h; ) try {
                    if (e = 1, s && (o = 2 & r[0] ? s.return : r[0] ? s.throw || ((o = s.return) && o.call(s), 
                    0) : s.next) && !(o = o.call(s, r[1])).done) return o;
                    switch (s = 0, o && (r = [ 2 & r[0], o.value ]), r[0]) {
                      case 0:
                      case 1:
                        o = r;
                        break;

                      case 4:
                        return h.label++, {
                            value: r[1],
                            done: !1
                        };

                      case 5:
                        h.label++, s = r[1], r = [ 0 ];
                        continue;

                      case 7:
                        r = h.ops.pop(), h.trys.pop();
                        continue;

                      default:
                        if (!(o = 0 < (o = h.trys).length && o[o.length - 1]) && (6 === r[0] || 2 === r[0])) {
                            h = 0;
                            continue;
                        }
                        if (3 === r[0] && (!o || r[1] > o[0] && r[1] < o[3])) {
                            h.label = r[1];
                            break;
                        }
                        if (6 === r[0] && h.label < o[1]) {
                            h.label = o[1], o = r;
                            break;
                        }
                        if (o && h.label < o[2]) {
                            h.label = o[2], h.ops.push(r);
                            break;
                        }
                        o[2] && h.ops.pop(), h.trys.pop();
                        continue;
                    }
                    r = n.call(i, h);
                } catch (t) {
                    r = [ 6, t ], s = 0;
                } finally {
                    e = o = 0;
                }
                if (5 & r[0]) throw r[1];
                return {
                    value: r[0] ? r[1] : void 0,
                    done: !0
                };
            }([ r, t ]);
        };
    }
};

Object.defineProperty(exports, "__esModule", {
    value: !0
});

var abstractLob_1 = require("../desc/abstractLob"), bufferUtil_1 = require("../utils/bufferUtil"), error_1 = require("./error"), Clob = function(s) {
    function h(t, r, i, n) {
        var e = this;
        return t instanceof Buffer && void 0 !== i && void 0 !== n ? (e = s.call(this, abstractLob_1.AbstractLob.LOB_FLAG_CHAR, r, t, i) || this).serverEncoding = r.getServerEncoding() : ((e = s.call(this, abstractLob_1.AbstractLob.LOB_FLAG_CHAR, r) || this).serverEncoding = r.getServerEncoding(), 
        e.data = t, e.length = e.data.length), e;
    }
    return __extends(h, s), h.newClobOfLocal = function(r, i) {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(t) {
                return [ 2, new h(r, i) ];
            });
        });
    }, h.newClobFromDB = function(n, e, s, o) {
        return __awaiter(this, void 0, void 0, function() {
            var r, i;
            return __generator(this, function(t) {
                switch (t.label) {
                  case 0:
                    return (r = new h(n, e, s, o)).inRow ? (i = e.newLobFlag ? abstractLob_1.AbstractLob.NBLOB_EX_HEAD_SIZE : abstractLob_1.AbstractLob.NBLOB_INROW_HEAD_SIZE, 
                    r.data = bufferUtil_1.BufferUtil.c(n, i, r.getLengthFromHead(n), r.serverEncoding), 
                    r.length = r.data.length, [ 3, 3 ]) : [ 3, 1 ];

                  case 1:
                    return o ? [ 4, r.loadAllData() ] : [ 3, 3 ];

                  case 2:
                    t.sent(), t.label = 3;

                  case 3:
                    return [ 2, r ];
                }
            });
        });
    }, h.prototype.loadAllData = function() {
        return __awaiter(this, void 0, void 0, function() {
            var r, i, n;
            return __generator(this, function(t) {
                switch (t.label) {
                  case 0:
                    return (this.checkFreed(), this.local || this.inRow || this.fetchAll) ? [ 2 ] : (i = (r = this).getSubString, 
                    n = [ 1 ], [ 4, this.getLength() ]);

                  case 1:
                    return [ 4, i.apply(this, n.concat([ t.sent() ])) ];

                  case 2:
                    return r.data = t.sent(), this.fetchAll = !0, [ 2 ];
                }
            });
        });
    }, h.prototype.getSubString = function(i, n) {
        return __awaiter(this, void 0, void 0, function() {
            var r;
            return __generator(this, function(t) {
                switch (t.label) {
                  case 0:
                    if (this.checkFreed(), i < 1 || n < 0) throw error_1.DBError.ECJS_INVALID_LENGTH_OR_OFFSET();
                    return i--, [ 4, this.getLength() ];

                  case 1:
                    if ((r = t.sent() - i) < 0) throw error_1.DBError.ECJS_INVALID_LENGTH_OR_OFFSET();
                    if (n = r < n ? r : n, this.local || this.inRow || this.fetchAll) {
                        if (i > this.length) throw error_1.DBError.ECJS_INVALID_LENGTH_OR_OFFSET();
                        return [ 2, this.data.substr(i, n) ];
                    }
                    return this.conn.checkClosed(), [ 2, this.conn.access.C(this, i, n) ];
                }
            });
        });
    }, h.prototype.setString = function(n, e, s, o) {
        return __awaiter(this, void 0, void 0, function() {
            var r, i;
            return __generator(this, function(t) {
                switch (t.label) {
                  case 0:
                    if (this.checkFreed(), n < 1 || s < 0 || o < 0 || s + o > e.length) throw error_1.DBError.ECJS_INVALID_LENGTH_OR_OFFSET();
                    if (!this.updateable) throw error_1.DBError.ECJS_RESULTSET_IS_READ_ONLY();
                    if (e = e.substr(s, o), n--, r = 0, !this.local && !this.fetchAll) return [ 3, 1 ];
                    if (n > this.length) throw error_1.DBError.ECJS_INVALID_LENGTH_OR_OFFSET();
                    return this.setLocalData(n, e), r = e.length, [ 3, 3 ];

                  case 1:
                    return this.conn.checkClosed(), [ 4, this.conn.access.S(this, n, e, this.serverEncoding) ];

                  case 2:
                    i = t.sent(), -1 === this.groupId ? this.setLocalData(n, e) : (this.inRow = !1, 
                    this.length = -1), r = i, t.label = 3;

                  case 3:
                    return this.modify = !0, [ 2, r ];
                }
            });
        });
    }, h.prototype.truncate = function(i) {
        return __awaiter(this, void 0, void 0, function() {
            var r;
            return __generator(this, function(t) {
                switch (t.label) {
                  case 0:
                    if (this.checkFreed(), i < 0) throw error_1.DBError.ECJS_INVALID_LENGTH_OR_OFFSET();
                    if (!this.updateable) throw error_1.DBError.ECJS_RESULTSET_IS_READ_ONLY();
                    return this.local || this.fetchAll ? i >= this.data.length ? [ 2 ] : (this.data = this.data.slice(0, i), 
                    this.length = i, [ 3, 3 ]) : [ 3, 1 ];

                  case 1:
                    return this.conn.checkClosed(), [ 4, (r = this).conn.access.O(this, i) ];

                  case 2:
                    r.length = t.sent(), -1 === this.groupId && (this.data = this.data.slice(0, this.length)), 
                    t.label = 3;

                  case 3:
                    return this.modify = !0, [ 2 ];
                }
            });
        });
    }, h.prototype.setLocalData = function(t, r) {
        t + r.length > this.length ? this.data = this.data.substring(0, t) + r : this.data = this.data.substring(0, t) + r + this.data.substring(t + r.length, this.data.length), 
        this.length = this.data.length;
    }, h;
}(abstractLob_1.AbstractLob);

exports.Clob = Clob;